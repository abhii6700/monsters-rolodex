{"version":3,"sources":["logo.svg","component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handlechange","type","onChange","App","state","SearchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCaAA,EAVK,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UACTC,IAAG,gCAA6BH,EAAMI,QAAQC,GAA3C,6BAEJ,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCIVC,G,MARS,SAAAR,GAEpB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAU,YAAf,SACFD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAC3B,cAAC,EAAD,CAAwBA,QAASA,EAAjC,cAAYA,EAAQC,WCIbQ,G,MATG,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACd,uBACId,UAAY,SACZe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCHG,E,kDAlCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAc,IAJL,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAASc,S,oBAE1C,WAAS,IAAD,SAC0BE,KAAKR,MAA9BR,EADD,EACCA,SAAUS,EADX,EACWA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQE,KAAKwB,cAAcC,SAASX,EAAYU,kBAClD,OAEE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAa,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAExD,cAAC,EAAD,CAAUvB,SAAWiB,W,GA3BXO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.06aaa5ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' \r\n        src= { `https://robohash.org/ ${props.monster.id} ?set=set2&size=180x180`}\r\n        />\r\n       <h2>{props.monster.name}</h2>\r\n       <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n\r\nexport default Card ","import React from 'react';\r\nimport Card from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\n\r\nexport const CardList = props => {\r\n    console.log(props);\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster =>(\r\n        <Card  key={monster.id} monster={monster}> </Card>))}\r\n    </div>\r\n} ;\r\n\r\nexport default CardList","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nconst SearchBox = ({placeholder, handlechange}) => (\r\n    <input \r\n        className = 'search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handlechange}\r\n    />\r\n)\r\n\r\nexport default SearchBox","import logo from './logo.svg';\nimport React, { Component } from 'react'\nimport './App.css';\nimport { render } from 'react-dom';\nimport CardList from './component/card-list/card-list.component'\nimport SearchBox from './component/search-box/search-box.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      SearchField : ''\n      \n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters:users }))\n  }\n  render(){\n    const {monsters, SearchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(SearchField.toLowerCase()));\n    return(\n      \n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n        placeholder='Search Monsters'\n        handlechange={e => this.setState({SearchField: e.target.value})}\n        />\n        <CardList monsters= {filteredMonsters}/>\n      \n    </div>\n    )\n   \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}